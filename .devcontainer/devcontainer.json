{
  "name": "Ashworth Engine Development",
  "dockerComposeFile": "../docker-compose.dev.yml",
  "service": "dev",
  "workspaceFolder": "/workspace",
  "shutdownAction": "stopCompose",
  
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "enableNonRootDocker": "true"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "installDirectlyFromGitHubRelease": true
    }
  },
  
  "customizations": {
    "vscode": {
      "extensions": [
        // Python Development
        "ms-python.python",
        "ms-python.black-formatter",
        "ms-python.ruff",
        "ms-python.mypy-type-checker",
        "ms-python.debugpy",
        "ms-toolsai.jupyter",
        "charliermarsh.ruff",
        
        // Docker Development
        "ms-azuretools.vscode-docker",
        "ms-vscode-remote.remote-containers",
        
        // LangGraph and AI Development
        "ms-python.pylint",
        "ms-python.flake8",
        "tamasfe.even-better-toml",
        "redhat.vscode-yaml",
        "ms-vscode.vscode-json",
        
        // Web Development (for frontend components)
        "ms-vscode.vscode-typescript-next",
        "bradlc.vscode-tailwindcss",
        "esbenp.prettier-vscode",
        
        // Development Tools
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "ms-vscode.vscode-thunder-client",
        "humao.rest-client",
        "ms-vscode.hexeditor",
        
        // Git and Version Control
        "eamodio.gitlens",
        "GitHub.vscode-pull-request-github",
        
        // Productivity
        "ms-vscode.vscode-todo-highlight",
        "streetsidesoftware.code-spell-checker"
      ],
      "settings": {
        // Python Configuration
        "python.defaultInterpreterPath": "/workspace/.venv/bin/python",
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.ruffEnabled": true,
        "python.linting.mypyEnabled": true,
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": ["tests"],
        
        // Debugging Configuration
        "python.debugging.console": "integratedTerminal",
        "python.terminal.activateEnvironment": true,
        
        // Editor Configuration
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true,
          "source.fixAll.ruff": true
        },
        "editor.rulers": [88, 120],
        "editor.tabSize": 4,
        "editor.insertSpaces": true,
        
        // File Exclusions
        "files.exclude": {
          "**/__pycache__": true,
          "**/.pytest_cache": true,
          "**/.mypy_cache": true,
          "**/.ruff_cache": true,
          "**/*.pyc": true,
          "**/.venv": false
        },
        
        // Terminal Configuration
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/bin/bash",
            "args": ["-l"]
          }
        },
        
        // Docker Configuration
        "docker.showStartPage": false,
        
        // LangGraph Specific Settings
        "python.analysis.extraPaths": [
          "/workspace/src",
          "/workspace/.venv/lib/python3.11/site-packages"
        ],
        "python.analysis.autoImportCompletions": true,
        "python.analysis.typeCheckingMode": "basic",
        
        // REST Client Configuration
        "rest-client.environmentVariables": {
          "local": {
            "baseUrl": "http://localhost:8000",
            "ollamaHost": "http://192.168.1.220:11434"
          }
        }
      }
    }
  },
  
  "forwardPorts": [8000, 3000, 54321, 54322, 11434],
  "portsAttributes": {
    "8000": {
      "label": "FastAPI Backend",
      "onAutoForward": "notify"
    },
    "3000": {
      "label": "Next.js Frontend",
      "onAutoForward": "notify"
    },
    "54321": {
      "label": "Supabase Studio",
      "onAutoForward": "notify"
    },
    "54322": {
      "label": "PostgreSQL",
      "onAutoForward": "silent"
    },
    "11434": {
      "label": "External Ollama Server",
      "onAutoForward": "silent"
    }
  },
  
  "postCreateCommand": "bash .devcontainer/post-create.sh",
  
  "remoteEnv": {
    "OLLAMA_HOST": "http://192.168.1.220:11434",
    "LLM_PROVIDER": "ollama",
    "PYTHONPATH": "/workspace",
    "NODE_ENV": "development",
    "DATABASE_URL": "postgresql://postgres:postgres@localhost:54322/postgres",
    "SUPABASE_URL": "http://localhost:54321",
    "SUPABASE_ANON_KEY": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0",
    "DEBUG": "true",
    "LOG_LEVEL": "DEBUG"
  },
  
  "mounts": [
    "source=${localWorkspaceFolder}/data,target=/workspace/data,type=bind,consistency=cached",
    "source=${localWorkspaceFolder}/.env,target=/workspace/.env,type=bind,consistency=cached"
  ],
  
  "initializeCommand": "echo 'Initializing Ashworth Engine development environment...'",
  
  "onCreateCommand": "echo 'Container created successfully'",
  
  "updateContentCommand": "echo 'Updating development environment...'",
  
  "postStartCommand": "echo 'Development environment ready!'"
}